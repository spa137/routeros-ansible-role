# - name: "run command on remote devices: ip address print"
#   routeros_command:
#     commands: /ip address print
#   register: result
#   tags: [ "ip" ]

# - debug:
#     msg: "{{ result.stdout_lines }}"
#   tags: [ "ip" ]

- name: setup timezone
  routeros_command:
    commands: /system clock set time-zone-autodetect=no time-zone-name={{ routeros_timezone }}
  tags: [ "install" ]

- name: "disable sensitive service [ telnet, ftp, www, api, api-ssl ]"
  routeros_command:
    commands: /ip service disable {{ item }}
  with_items:
   - telnet
   - ftp
   - www
   - api
   - api-ssl
  tags: [ "install" ]

- name: "change default ssh port"
  routeros_command:
    commands: /ip service set ssh port={{ routeros_ssh_port }}
  tags: [ "install" ]

- name: "disable bandwidth test server"
  routeros_command:
    commands: /tool bandwidth-server set enabled=no
  tags: [ "install" ]

- name: "disable dns cache"
  routeros_command:
    commands: /ip dns set allow-remote-requests=no
  tags: [ "install" ]

- name: "ssh strong key"
  routeros_command:
    commands: /ip ssh set strong-crypto=yes
  when: routeros_disable_old_cryptographic_login
  tags: [ "install" ]

- name: "no login with password"
  routeros_command:
    commands: /ip ssh set always-allow-password-login=no
  when: routeros_disable_password_login
  tags: [ "install" ]

- name: "bind ip for winbox"
  routeros_command:
    commands: /ip service set winbox address={{ routeros_secure_address }}
  when: not routeros_disable_password_login
  tags: [ "install" ]

# qui va fatto il firewall setup
# ensure this is at the top of the rule list
# /ip firewall filter add action=accept chain=input comment="allow admin access to router from authorized clients" dst-port={{ routeros_ssh_port }},8888,8291 in-interface-list=!WAN protocol=tcp

# bisogna decire quale interfaccia
#/tool mac-server set allowed-interface-list=none
#/tool mac-server print

- import_tasks: reboot.yml
  tags: [ "reboot" ]

- import_tasks: shutdown.yml
  tags: [ "shutdown" ]